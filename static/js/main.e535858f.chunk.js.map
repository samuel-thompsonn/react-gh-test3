{"version":3,"sources":["logo.svg","ResponseBox.js","App.js","reportWebVitals.js","index.js"],"names":["PurpleSwitch","withStyles","switchBase","color","blue","backgroundColor","checked","track","Switch","ResponseBox","id","whatPrinciples","onChange","startTags","hasStartContent","React","useState","hasContent","setContent","map","tagName","index","tags","setTags","length","tagCounter","setTagCounter","tagElements","useRef","checkForContent","modifiedId","newValue","tag","handleTagChange","event","target","value","handleAddTag","push","handleRemoveTag","filter","handleContentTagSubmit","key","preventDefault","document","activeElement","blur","useEffect","content","contentTags","className","Typography","display","FormGroup","FormControlLabel","control","label","labelPlacement","ref","TextField","autoFocus","placeholder","onKeyPress","InputProps","endAdornment","InputAdornment","position","Tooltip","title","IconButton","onClick","size","useStyles","makeStyles","theme","input","headerText","App","classes","usePrincip","whatPrincip","responses","setResponses","workbook","setWorkbook","scoringData","setScoringData","mappedScoreData","setMappedScoreData","fileName","setFileName","getCell","worksheet","column","row","column_letter","toString","toUpperCase","console","log","cellIndex","cellIndexByValue","startRow","rowIndex","currCell","listToCommaSep","stringList","output","i","clearResponses","type","accept","files","file","split","pop","wb","Excel","reader","FileReader","onload","buffer","result","xlsx","load","then","getWorksheet","dataResponses","startCell","localResponses","currentRow","principCell","c","r","idCell","whatCell","numFactorsCell","tagsCell","currentTags","response","numFactors","getRawDataResponses","setDefaultSheetvalues","scoringResponses","readAsArrayBuffer","htmlFor","Button","variant","component","allContentTags","Object","values","scoring","targetRow","columnIndex","setColumnValues","sort","writeBuffer","data","blob","Blob","FileSaver","downloadWorkbook","targetData","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e535858f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react'\r\nimport Switch from '@material-ui/core/Switch'\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport { Button, InputAdornment, Tooltip, Typography, withStyles } from '@material-ui/core';\r\nimport { TextField } from '@material-ui/core';\r\nimport { IconButton } from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport { blue } from '@material-ui/core/colors';\r\nimport './ResponseBox.css'\r\n\r\nconst PurpleSwitch = withStyles({\r\n    switchBase: {\r\n      color: blue[50],\r\n      '&$checked': {\r\n        color: blue[900],\r\n      },\r\n      '&$checked + $track': {\r\n        backgroundColor: blue[900],\r\n      },\r\n    },\r\n    checked: {},\r\n    track: {},\r\n  })(Switch);\r\n\r\nexport default function ResponseBox({ id, whatPrinciples, onChange, startTags, hasStartContent}) {\r\n    const [hasContent, setContent] = React.useState(hasStartContent);\r\n    const [tags, setTags] = React.useState(\r\n        startTags.map((tagName, index) => {\r\n            return {\r\n                id: index,\r\n                tagName: tagName,\r\n            }\r\n        })\r\n    );\r\n    const [tagCounter, setTagCounter] = React.useState(startTags.length + 5);\r\n    const tagElements = React.useRef(null);\r\n\r\n    function checkForContent(modifiedId=-1, newValue=\"\") {\r\n        // Could move this to the end, but it saves some looping here.\r\n        if (newValue !== \"\") { return true; }\r\n        for (let tag of tags) {\r\n            if (tag.id !== modifiedId && tag.tagName !== \"\") {\r\n                return true;\r\n            }\r\n        }\r\n        return newValue !== \"\";\r\n    }\r\n\r\n    const handleTagChange = (id) => (event) => {\r\n        setTags((tags.map((tag) => {\r\n            return {\r\n                id: tag.id,\r\n                tagName: (tag.id === id)? event.target.value : tag.tagName\r\n            }\r\n        })))\r\n        setContent(checkForContent(id, event.target.value));\r\n    }\r\n\r\n    const handleAddTag = () => {\r\n        setTagCounter(tagCounter+1);\r\n        tags.push({\r\n            id: tagCounter,\r\n            tagName: \"\",\r\n        })\r\n        setTags(tags);\r\n        // tagElements.current.focus();\r\n    }\r\n\r\n    const handleRemoveTag = (id) => () => {\r\n        setTags(tags.filter((tag) => tag.id != id));\r\n        setContent(checkForContent(id))\r\n    }\r\n\r\n    const handleContentTagSubmit = (event) => {\r\n        const key = event.key;\r\n        if (key === 'Enter' || key === ',') { \r\n            event.preventDefault();\r\n            handleAddTag(); \r\n        }\r\n        if (key === 'Escape') { \r\n            document.activeElement.blur(); \r\n        }\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        onChange({\r\n            id: id,\r\n            content: hasContent,\r\n            contentTags: tags.map((tag) => tag.tagName).filter((tagName) => tagName != ''),\r\n        });\r\n    }, [tags, hasContent])\r\n\r\n\r\n    return (\r\n        <div className=\"response-box\">\r\n            <div className=\"id-container\">\r\n                <Typography display=\"inline\">ID: {id}</Typography>\r\n            </div>\r\n            <div className=\"explanation-container\">\r\n                <Typography display=\"block\">{whatPrinciples}</Typography>\r\n            </div>\r\n            <div className=\"coding-container\">\r\n                <div className=\"has-content-container\">\r\n                    <FormGroup>\r\n                        <FormControlLabel\r\n                            control={<PurpleSwitch \r\n                                checked={hasContent} \r\n                                onChange={(event)=>{setContent(event.target.checked)}}>\r\n                            </PurpleSwitch>}\r\n                            label=\"Content?\"\r\n                            labelPlacement=\"top\"\r\n                        />\r\n                    </FormGroup>\r\n                </div>\r\n                <div className=\"content-codes-container\">\r\n                    {tags.map((tag) => {\r\n                        return (\r\n                            <div className=\"tag-container\" ref={tagElements}>\r\n                                <TextField \r\n                                    autoFocus\r\n                                    placeholder=\"Content code\"\r\n                                    onKeyPress={handleContentTagSubmit}\r\n                                    value={tag.tagName} \r\n                                    onChange={handleTagChange(tag.id)}\r\n                                    ref={tagElements}\r\n                                    InputProps={{\r\n                                        endAdornment: (\r\n                                            <InputAdornment position=\"end\">\r\n                                                <Tooltip title=\"Remove\">\r\n                                                    <IconButton\r\n                                                        aria-label=\"toggle password visibility\"\r\n                                                        onClick={handleRemoveTag(tag.id)}\r\n                                                        size=\"small\"\r\n                                                    >\r\n                                                        <ClearIcon/>\r\n                                                    </IconButton>\r\n                                                </Tooltip>\r\n\r\n                                            </InputAdornment>\r\n                                    )}}>\r\n                                </TextField>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                    <Tooltip title=\"Add tag\">\r\n                        <IconButton onClick={handleAddTag}><AddIcon/></IconButton>\r\n                    </Tooltip>\r\n                    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import logo from './logo.svg';\nimport './App.css';\nimport * as Excel from 'exceljs'\nimport * as FileSaver from 'file-saver'\nimport React from 'react'\nimport ResponseBox from './ResponseBox'\nimport { Button, Input, Typography} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  input: {\n    display: 'none',\n  },\n  headerText: {\n    color: '#bbbbbb',\n  },\n}));\n\nfunction App() {\n\n  const classes = useStyles();\n\n  const [responses, setResponses] = React.useState([{ id: 0, usePrincip: \"No\", whatPrincip: \"Meh\"}]);\n  const [workbook, setWorkbook] = React.useState(null);\n  const [scoringData, setScoringData] = React.useState([]);\n  const [mappedScoreData, setMappedScoreData] = React.useState({});\n  const [fileName, setFileName] = React.useState(\"None--Press the upload button to upload a .xlsx file.\")\n\n  function getRawDataResponses(worksheet, startCell) {\n    let localResponses = [];\n    let currentRow = 0;\n    while (true) {\n      let principCell = getCell(worksheet, startCell.c + 2, startCell.r + currentRow);\n      if (!principCell || (principCell.value !== 'Yes' && principCell.value !== 'No')) { break; }\n      let idCell = getCell(worksheet, startCell.c, startCell.r + currentRow);\n      let whatCell = getCell(worksheet, startCell.c + 3, startCell.r + currentRow);\n      let numFactorsCell = getCell(worksheet, startCell.c + 5, startCell.r + currentRow);\n      let tagsCell = getCell(worksheet, startCell.c + 6, startCell.r + currentRow);\n      let currentTags = [];\n      if (tagsCell && tagsCell.value) {\n        console.log(tagsCell.value);\n        currentTags = tagsCell.value.toString().split(\", \");\n      }\n      let response = {\n        id: idCell.value,\n        usePrincip: principCell.value,\n        whatPrincip: whatCell.value,\n        numFactors: (numFactorsCell.value)? numFactorsCell.value : 0,\n        tags: currentTags,\n      }\n      localResponses.push(response);\n      currentRow++;\n    }\n    return localResponses;\n  }\n\n  // Column and row both start at index 0\n  function getCell(worksheet, column, row) {\n    // https://stackoverflow.com/questions/36129721/convert-number-to-alphabet-letter\n    const column_letter = (column+10).toString(36).toUpperCase();\n    console.log(column_letter);\n    const cellIndex = column_letter + (row + 1);\n    console.log(cellIndex);\n    return worksheet.getCell(cellIndex);\n  }\n  \n  function downloadWorkbook(workbook, fileName) {\n    const fileType = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\n    let EXCEL_EXTENSION = '.xlsx';\n    // https://stackoverflow.com/questions/43279928/writefile-not-woking-in-exceljs\n    workbook.xlsx.writeBuffer().then((data) => {\n      const blob= new Blob([data], {type: fileType});\n      FileSaver.saveAs(blob, fileName + EXCEL_EXTENSION);\n    });\n  }\n\n  function setDefaultSheetvalues(worksheet, startCell) {\n    let currentRow = 0;\n    while (true) {\n      let principCell = getCell(worksheet, startCell.c + 2, startCell.r + currentRow);\n      if (!principCell || (principCell.value !== 'Yes' && principCell.value !== 'No')) { break; }\n      getCell(worksheet,startCell.c + 4, startCell.r + currentRow).value = 0;\n      getCell(worksheet,startCell.c + 5, startCell.r + currentRow).value = 0;\n      currentRow ++;\n    }\n  }\n\n  const reactToFile = (event) => {\n    if (event.target.files.length === 0) {\n      return;\n    }\n    let file = event.target.files[0];\n    setFileName(event.target.value.split(\"\\\\\").pop());\n    const wb = new Excel.Workbook();\n    const reader = new FileReader();\n    reader.onload = () => {\n      clearResponses();\n      const buffer = reader.result;\n      wb.xlsx.load(buffer).then((workbook) => {\n        setWorkbook(workbook);\n        const worksheet = workbook.getWorksheet('DAT');\n        let dataResponses = getRawDataResponses(worksheet, {c:0,r:2});\n        setResponses(dataResponses);\n        setDefaultSheetvalues(worksheet, {c:0,r:2});\n        let scoringResponses = [];\n        for (let response of dataResponses) {\n          scoringResponses.push({\n            id: response.id,\n            content: false,\n            contentTags: [],\n          });\n        }\n        setScoringData(scoringResponses);\n        let mappedScoringResponses = {};\n        for (let response of dataResponses) {\n          scoringResponses[response.id] = {\n            id: response.id,\n            content: false,\n            contentTags: [],\n          };\n        }\n        setMappedScoreData(mappedScoringResponses);\n        event.target.value = null;\n      });\n    };\n    reader.readAsArrayBuffer(file);\n    console.log(\"File has been uploaded!\");\n  }\n\n  function cellIndexByValue(worksheet, column, value, startRow=0) {\n    let rowIndex = startRow;\n    while (true) {\n      let currCell = getCell(worksheet, column, rowIndex);\n      if (!currCell) { return -1; }\n      if (rowIndex > 500) {\n        console.log(\"Encountered an infinite loop!\");\n        return -1;\n      }\n      if (currCell.value === value) { return rowIndex; }\n      rowIndex ++;\n    }\n  }\n\n  function listToCommaSep(stringList) {\n    let output = \"\";\n    for (let i = 0; i < stringList.length; i ++) {\n      output += stringList[i];\n      if (i != stringList.length - 1) {\n        output += \", \";\n      }\n    }\n    return output;\n  }\n\n  // columnIndex starts at 0 for column A\n  function setColumnValues(worksheet, columnIndex, values, startRow=0) {\n    for (let i = 0; i < values.length; i ++) {\n      getCell(worksheet, columnIndex, startRow + i).value = values[i];\n    }\n  }\n\n  const submitScoring = () => {\n    console.log(\"Submitting scoring using new function!\")\n    if (!workbook) {\n      console.log(\"No workbook!\");\n      return;\n    }\n    console.log(scoringData);\n    let worksheet = workbook.getWorksheet('DAT');\n    let allContentTags = [];\n    for (let scoring of Object.values(mappedScoreData)) {\n      let targetRow = cellIndexByValue(worksheet, 0, scoring.id, 2);\n      if (targetRow === -1) { continue; }\n      getCell(worksheet, 4, targetRow).value = (scoring.content)? 1 : 0;\n      getCell(worksheet, 5, targetRow).value = scoring.contentTags.length;\n      getCell(worksheet, 6, targetRow).value = listToCommaSep(scoring.contentTags);\n      allContentTags.push(...(scoring.contentTags));\n    }\n    setColumnValues(worksheet, 9, allContentTags.sort(), 2);\n    const formulaText = '_xlfn.UNIQUE(_xlfn._xlws.FILTER(OFFSET(J3,0,0,ROWS(J:J)-2), OFFSET(J3,0,0,ROWS(J:J)-2)<>\"\"))';\n    // formula: '=UNIQUE(FILTER(OFFSET(J3,0,0,ROWS(J:J)-2), OFFSET(J3,0,0,ROWS(J:J)-2)<>\"\"))',\n    // console.log(worksheet.getCell('K3'));\n    // worksheet.getCell('K3').value = {\n    //   formula: formulaText,\n    //   shareType: 'array',\n    //   ref: 'K3:K100'\n    // };\n    downloadWorkbook(workbook, \"newlib_output\");\n  }\n\n  const handleScoringChange = (id) => (targetData) => {\n    mappedScoreData[id] = targetData;\n    setMappedScoreData(mappedScoreData);\n  }\n\n  const clearResponses = () => {\n    setResponses([]);\n  }\n\n  return (\n    <div className>\n      <div className=\"top-bar sticky\">\n        <div className=\"file-manager\">\n          <input\n            type='file'\n            accept=\".xlsx\"\n            className={classes.input}\n            id='contained-button-file'\n            onChange={reactToFile}\n          />\n          <label\n            htmlFor='contained-button-file'>\n            <Button variant=\"contained\" component=\"span\">Upload spreadsheet</Button>\n          </label>\n          <Typography className={classes.headerText}>Now scoring: {fileName}</Typography>\n        </div>\n        <div>\n          <Button variant=\"contained\" onClick={submitScoring}>Download spreadsheet</Button>\n        </div>\n      </div>\n      <div className=\"response-container-container\">\n        {responses.map((response) => {\n          if (response.usePrincip === 'No' || response.whatPrincip === '') { return null; }\n          return (\n            <div className=\"response-container\">\n              <ResponseBox \n                id={response.id} \n                whatPrinciples={response.whatPrincip} \n                onChange={handleScoringChange(response.id)}\n                startTags={response.tags}\n                hasStartContent={response.numFactors !== 0}>\n              </ResponseBox>\n            </div>\n          )\n      })}\n      </div>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}