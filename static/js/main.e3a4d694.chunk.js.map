{"version":3,"sources":["logo.svg","ResponseBox.js","App.js","reportWebVitals.js","index.js"],"names":["PurpleSwitch","withStyles","switchBase","color","blue","backgroundColor","checked","track","Switch","useStyles","makeStyles","theme","paperRoot","width","height","borderColor","ResponseBox","id","whatPrinciples","onChange","startTags","hasStartContent","classes","React","useState","hasContent","setContent","map","tagName","index","tags","setTags","length","tagCounter","setTagCounter","tagElements","useRef","checkForContent","modifiedId","newValue","tag","handleTagChange","event","target","value","replace","handleAddTag","push","handleRemoveTag","filter","handleContentTagSubmit","key","preventDefault","document","activeElement","blur","useEffect","content","contentTags","className","Paper","elevation","Typography","display","ref","TextField","autoFocus","placeholder","onKeyPress","InputProps","endAdornment","InputAdornment","position","Tooltip","title","IconButton","onClick","size","FormGroup","FormControlLabel","control","label","labelPlacement","input","headerText","App","usePrincip","whatPrincip","responses","setResponses","workbook","setWorkbook","mappedScoreData","setMappedScoreData","fileName","setFileName","getCell","worksheet","column","row","column_letter","toString","toUpperCase","console","log","cellIndex","cell","cellIndexByValue","startRow","rowIndex","currCell","listToCommaSep","stringList","output","i","clearResponses","type","accept","files","file","XlsxPopulate","then","newWorkbook","split","pop","sheet","dataResponses","startCell","localResponses","currentRow","principCell","c","r","idCell","whatCell","numFactorsCell","tagsCell","currentTags","trim","response","numFactors","getRawDataResponses","setDefaultSheetvalues","mappedScoringResponses","htmlFor","Button","variant","component","allContentTags","Object","values","scoring","targetRow","columnIndex","setColumnValues","sort","outputAsync","popBlob","window","navigator","msSaveOrOpenBlob","url","URL","createObjectURL","a","createElement","body","appendChild","href","download","click","revokeObjectURL","removeChild","downloadWorkbook","targetData","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e3a4d694.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react'\r\nimport Switch from '@material-ui/core/Switch'\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport { Button, InputAdornment, makeStyles, Paper, Tooltip, Typography, withStyles } from '@material-ui/core';\r\nimport { TextField } from '@material-ui/core';\r\nimport { IconButton } from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport { blue } from '@material-ui/core/colors';\r\nimport './ResponseBox.css'\r\n\r\nconst PurpleSwitch = withStyles({\r\n    switchBase: {\r\n      color: blue[50],\r\n      '&$checked': {\r\n        color: blue[900],\r\n      },\r\n      '&$checked + $track': {\r\n        backgroundColor: blue[900],\r\n      },\r\n    },\r\n    checked: {},\r\n    track: {},\r\n  })(Switch);\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    paperRoot: {\r\n        width:'100%',\r\n        height: '100%',\r\n        backgroundColor: '#343a42',\r\n        borderColor: 'gray'\r\n    }\r\n}));\r\n\r\nexport default function ResponseBox({ id, whatPrinciples, onChange, startTags, hasStartContent}) {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [hasContent, setContent] = React.useState(hasStartContent);\r\n    const [tags, setTags] = React.useState(\r\n        startTags.map((tagName, index) => {\r\n            return {\r\n                id: index,\r\n                tagName: tagName,\r\n            }\r\n        })\r\n    );\r\n    const [tagCounter, setTagCounter] = React.useState(startTags.length + 5);\r\n    const tagElements = React.useRef(null);\r\n\r\n    function checkForContent(modifiedId=-1, newValue=\"\") {\r\n        // Could move this to the end, but it saves some looping here.\r\n        if (newValue !== \"\") { return true; }\r\n        for (let tag of tags) {\r\n            if (tag.id !== modifiedId && tag.tagName !== \"\") {\r\n                return true;\r\n            }\r\n        }\r\n        return newValue !== \"\";\r\n    }\r\n\r\n    const handleTagChange = (id) => (event) => {\r\n        const newValue = event.target.value.replace(/^\\s*/,'');\r\n        setTags((tags.map((tag) => {\r\n            return {\r\n                id: tag.id,\r\n                tagName: (tag.id === id)? newValue : tag.tagName\r\n            }\r\n        })))\r\n        setContent(checkForContent(id, newValue));\r\n    }\r\n\r\n    const handleAddTag = () => {\r\n        setTagCounter(tagCounter+1);\r\n        tags.push({\r\n            id: tagCounter,\r\n            tagName: \"\",\r\n        })\r\n        setTags(tags);\r\n        // tagElements.current.focus();\r\n    }\r\n\r\n    const handleRemoveTag = (id) => () => {\r\n        setTags(tags.filter((tag) => tag.id != id));\r\n        setContent(checkForContent(id))\r\n    }\r\n\r\n    const handleContentTagSubmit = (event) => {\r\n        const key = event.key;\r\n        if (key === 'Enter' || key === ',') { \r\n            event.preventDefault();\r\n            handleAddTag(); \r\n        }\r\n        if (key === 'Escape') { \r\n            document.activeElement.blur(); \r\n        }\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        onChange({\r\n            id: id,\r\n            content: hasContent,\r\n            contentTags: tags.map((tag) => tag.tagName).filter((tagName) => tagName != ''),\r\n        });\r\n    }, [tags, hasContent])\r\n\r\n\r\n    return (\r\n        <div className=\"response-box\">\r\n            <Paper className={classes.paperRoot} elevation={3} >\r\n            <div className=\"id-container\">\r\n                <Typography display=\"inline\">ID: {id}</Typography>\r\n            </div>\r\n            <div className=\"explanation-container\">\r\n                <Typography display=\"block\">{whatPrinciples}</Typography>\r\n            </div>\r\n            <div className=\"coding-container\">\r\n                <div className=\"content-codes-container\">\r\n                    {tags.map((tag) => {\r\n                        return (\r\n                            <div className=\"tag-container\" ref={tagElements}>\r\n                                <TextField \r\n                                    autoFocus\r\n                                    placeholder=\"Content code\"\r\n                                    onKeyPress={handleContentTagSubmit}\r\n                                    value={tag.tagName} \r\n                                    onChange={handleTagChange(tag.id)}\r\n                                    ref={tagElements}\r\n                                    InputProps={{\r\n                                        endAdornment: (\r\n                                            <InputAdornment position=\"end\">\r\n                                                <Tooltip title=\"Remove\">\r\n                                                    <IconButton\r\n                                                        aria-label=\"toggle password visibility\"\r\n                                                        onClick={handleRemoveTag(tag.id)}\r\n                                                        size=\"small\"\r\n                                                    >\r\n                                                        <ClearIcon/>\r\n                                                    </IconButton>\r\n                                                </Tooltip>\r\n\r\n                                            </InputAdornment>\r\n                                    )}}>\r\n                                </TextField>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                    <Tooltip title=\"Add tag\">\r\n                        <IconButton onClick={handleAddTag}><AddIcon/></IconButton>\r\n                    </Tooltip>\r\n                    \r\n                </div>\r\n                <div className=\"has-content-container\">\r\n                    <FormGroup>\r\n                        <Tooltip title=\"Enabled if one or more non-empty content codes are listed.\">\r\n                            <FormControlLabel\r\n                                control={<PurpleSwitch \r\n                                    checked={hasContent} \r\n                                    onChange={(event)=>{/*setContent(event.target.checked)*/}}>\r\n                                </PurpleSwitch>}\r\n                                label=\"Content?\"\r\n                                labelPlacement=\"top\"\r\n                            />  \r\n                        </Tooltip>\r\n                        \r\n                    </FormGroup>\r\n                </div>\r\n            </div>\r\n            </Paper>\r\n        </div>\r\n    )\r\n}","import logo from './logo.svg';\nimport './App.css';\nimport * as Excel from 'exceljs'\nimport * as FileSaver from 'file-saver'\nimport React from 'react'\nimport ResponseBox from './ResponseBox'\nimport { Button, Input, Typography} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core';\nimport * as XlsxPopulate from 'xlsx-populate';\nimport { TextField } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  input: {\n    display: 'none',\n  },\n  headerText: {\n    color: '#bbbbbb',\n  },\n  paperRoot: {\n    backgroundColor: 'red',\n  }\n}));\n\nfunction App() {\n\n  const classes = useStyles();\n\n  const [responses, setResponses] = React.useState([{ id: 0, usePrincip: \"No\", whatPrincip: \"Meh\"}]);\n  const [workbook, setWorkbook] = React.useState(null);\n  const [mappedScoreData, setMappedScoreData] = React.useState({});\n  const [fileName, setFileName] = React.useState(\"None--Press the upload button to upload a .xlsx file.\")\n\n  function getRawDataResponses(worksheet, startCell) {\n    let localResponses = [];\n    let currentRow = 0;\n    while (true) {\n      let principCell = getCell(worksheet, startCell.c + 2, startCell.r + currentRow);\n      if (!principCell || (principCell.value() !== 'Yes' && principCell.value() !== 'No')) { break; }\n      let idCell = getCell(worksheet, startCell.c, startCell.r + currentRow);\n      let whatCell = getCell(worksheet, startCell.c + 3, startCell.r + currentRow);\n      let numFactorsCell = getCell(worksheet, startCell.c + 5, startCell.r + currentRow);\n      let tagsCell = getCell(worksheet, startCell.c + 6, startCell.r + currentRow);\n      let currentTags = [];\n      if (tagsCell && tagsCell.value()) {\n        console.log(tagsCell.value());\n        const allTags = tagsCell.value().toString().split(\", \");\n        currentTags = allTags.filter((tag) => tag.trim() !== \"\");\n      }\n      let response = {\n        id: idCell.value(),\n        usePrincip: principCell.value(),\n        whatPrincip: whatCell.value(),\n        numFactors: (numFactorsCell.value())? numFactorsCell.value() : 0,\n        tags: currentTags,\n      }\n      localResponses.push(response);\n      currentRow++;\n    }\n    return localResponses;\n  }\n\n  // Column and row both start at index 0\n  function getCell(worksheet, column, row) {\n    // https://stackoverflow.com/questions/36129721/convert-number-to-alphabet-letter\n    const column_letter = (column+10).toString(36).toUpperCase();\n    console.log(column_letter);\n    const cellIndex = column_letter + (row + 1);\n    console.log(cellIndex);\n    return worksheet.cell(cellIndex);\n  }\n  \n  function downloadWorkbook(workbook, fileName) {\n    const EXCEL_EXTENSION = '.xlsx';\n    workbook.outputAsync()\n      .then((popBlob) => {\n        if (window.navigator && window.navigator.msSaveOrOpenBlob) {\n          window.navigator.msSaveOrOpenBlob(popBlob, \"populate-out.xlsx\");\n        }\n        else {\n          let url = window.URL.createObjectURL(popBlob);\n          let a = document.createElement(\"a\");\n          document.body.appendChild(a);\n          a.href = url;\n          a.download = fileName + EXCEL_EXTENSION;\n          a.click();\n          window.URL.revokeObjectURL(url);\n          document.body.removeChild(a);\n        }\n      })\n  }\n\n  function setDefaultSheetvalues(worksheet, startCell) {\n    let currentRow = 0;\n    const formulaString = '=SORT(FILTER(OFFSET(G3,0,0,COUNT(F:F)-1), (OFFSET(G3,0,0,COUNT(F:F)-1)<>\"\")))'\n    const simpleFormula = 'E3/F3'\n    // getCell(worksheet, startCell.c + 8, startCell.r).formula(simpleFormula);\n    while (true) {\n      let principCell = getCell(worksheet, startCell.c + 2, startCell.r + currentRow);\n      if (!principCell || (principCell.value() !== 'Yes' && principCell.value() !== 'No')) { break; }\n      getCell(worksheet,startCell.c + 4, startCell.r + currentRow).value(0);\n      getCell(worksheet,startCell.c + 5, startCell.r + currentRow).value(0);\n      getCell(worksheet,startCell.c + 9, startCell.r + currentRow).value(\"\")\n      currentRow ++;\n    }\n  }\n\n  const handleFileUpload = (event) => {\n    if (event.target.files.length === 0) {\n      return;\n    }\n    let file = event.target.files[0];\n    XlsxPopulate.fromDataAsync(file)\n      .then((newWorkbook) => {\n        setFileName(event.target.value.split(\"\\\\\").pop());\n        clearResponses();\n        setWorkbook(newWorkbook);\n        let worksheet = newWorkbook.sheet(\"DAT\");\n        let dataResponses = getRawDataResponses(worksheet, {c:0,r:2});\n        setResponses(dataResponses);\n        setDefaultSheetvalues(worksheet, {c:0,r:2});\n        let mappedScoringResponses = {};\n        for (let response of dataResponses) {\n          mappedScoringResponses[response.id] = {\n            id: response.id,\n            content: (response.tags.length !== 0),\n            contentTags: response.tags,\n          };\n        }\n        setMappedScoreData(mappedScoringResponses);\n        event.target.value = null;\n        // worksheet.column(\"G\").cell(3).value(\"size, color\");\n        // worksheet.column(\"J\").cell(3).value(\"size\");\n        // worksheet.column(\"J\").cell(4).value(\"color\");\n      });\n  }\n\n  function cellIndexByValue(worksheet, column, value, startRow=0) {\n    let rowIndex = startRow;\n    while (true) {\n      let currCell = getCell(worksheet, column, rowIndex);\n      if (!currCell) { return -1; }\n      if (rowIndex > 500) {\n        console.log(\"Encountered an infinite loop!\");\n        return -1;\n      }\n      if (currCell.value() === value) { return rowIndex; }\n      rowIndex ++;\n    }\n  }\n\n  function listToCommaSep(stringList) {\n    let output = \"\";\n    for (let i = 0; i < stringList.length; i ++) {\n      output += stringList[i];\n      if (i != stringList.length - 1) {\n        output += \", \";\n      }\n    }\n    return output;\n  }\n\n  // columnIndex starts at 0 for column A\n  function setColumnValues(worksheet, columnIndex, values, startRow=0) {\n    for (let i = 0; i < values.length; i ++) {\n      getCell(worksheet, columnIndex, startRow + i).value(values[i]);\n    }\n  }\n\n  const submitScoring = () => {\n    console.log(\"Submitting scoring using new function!\")\n    if (!workbook) {\n      console.log(\"No workbook!\");\n      return;\n    }\n    let worksheet = workbook.sheet('DAT');\n    let allContentTags = [];\n    for (let scoring of Object.values(mappedScoreData)) {\n      let targetRow = cellIndexByValue(worksheet, 0, scoring.id, 2);\n      if (targetRow === -1) { continue; }\n      getCell(worksheet, 4, targetRow).value((scoring.content)? 1 : 0);\n      getCell(worksheet, 5, targetRow).value(scoring.contentTags.length);\n      getCell(worksheet, 6, targetRow).value(listToCommaSep(scoring.contentTags));\n      allContentTags.push(...(scoring.contentTags));\n    }\n    setColumnValues(worksheet, 9, allContentTags.sort(), 2);\n    downloadWorkbook(workbook, \"newlib_output\");\n  }\n\n  const handleScoringChange = (id) => (targetData) => {\n    mappedScoreData[id] = targetData;\n    setMappedScoreData(mappedScoreData);\n  }\n\n  const clearResponses = () => {\n    setResponses([]);\n  }\n\n  return (\n    <div className>\n      <div className=\"top-bar sticky\">\n        <div className=\"file-manager\">\n          <input\n            type='file'\n            accept=\".xlsx\"\n            className={classes.input}\n            id='contained-button-file'\n            onChange={handleFileUpload}\n          />\n          <label\n            htmlFor='contained-button-file'>\n            <Button variant=\"contained\" component=\"span\">Upload spreadsheet</Button>\n          </label>\n          <Typography className={classes.headerText}>Now scoring: {fileName}</Typography>\n        </div>\n        <div className='download-interface'>\n          <Button variant=\"contained\" onClick={submitScoring}>Download spreadsheet</Button>\n        </div>\n      </div>\n      <div className=\"response-container-container\">\n        {responses.map((response) => {\n          if (response.usePrincip === 'No' || response.whatPrincip === '' || !(response.whatPrincip)) { return null; }\n          return (\n            <div className=\"response-container\">\n              <ResponseBox \n                id={response.id} \n                whatPrinciples={response.whatPrincip} \n                onChange={handleScoringChange(response.id)}\n                startTags={response.tags}\n                hasStartContent={response.tags.length !== 0}>\n              </ResponseBox>\n            </div>\n          )\n      })}\n      </div>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}